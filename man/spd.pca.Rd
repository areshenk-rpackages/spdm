% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spd-pca.R
\name{spd.pca}
\alias{spd.pca}
\title{Kernel pca for SPD matrices}
\usage{
spd.pca(x, method = "euclidean", sigma = 1, ...)
}
\arguments{
\item{x}{A list of symmetric, positive-definite matrices}

\item{method}{The type of distance. See \code{spd.dist}, but also see
details. Defaults to "logeuclidean".}

\item{sigma}{scale parameter for rbf kernel}

\item{...}{Further arguments for kernlab::kpca.}
}
\value{
An S4 object of class kpca.
}
\description{
Function performs kernel principal component analysis on a set of symmetric,
positive-definite matrices using an rbf kernel: \code{exp(-sigma * d(i,j)^2)},
where \code{d(i,j)} is a distance function implemented by \code{spd.dist}.
This function is more or less a wrapper around the kernlab function \code{kpca.}
}
\details{
Function performs kpca using a rbf kernel, where the distance between
two inputs is given by \code{method}. Note that only "euclidean" and "logeuclidean"
have been proven to give rise to positive-definite kernels for all values of sigma, although any distance
implemented in \code{spd.dist} may be used. Anecdotally, \code{method = "riemannian"}
often achieves superior performance.
}
